// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Autoencoder_Autoencoder_Pipeline_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        sext_ln31,
        InputValues_V_63_out,
        InputValues_V_63_out_ap_vld,
        InputValues_V_62_out,
        InputValues_V_62_out_ap_vld,
        InputValues_V_61_out,
        InputValues_V_61_out_ap_vld,
        InputValues_V_60_out,
        InputValues_V_60_out_ap_vld,
        InputValues_V_59_out,
        InputValues_V_59_out_ap_vld,
        InputValues_V_58_out,
        InputValues_V_58_out_ap_vld,
        InputValues_V_57_out,
        InputValues_V_57_out_ap_vld,
        InputValues_V_56_out,
        InputValues_V_56_out_ap_vld,
        InputValues_V_55_out,
        InputValues_V_55_out_ap_vld,
        InputValues_V_54_out,
        InputValues_V_54_out_ap_vld,
        InputValues_V_53_out,
        InputValues_V_53_out_ap_vld,
        InputValues_V_52_out,
        InputValues_V_52_out_ap_vld,
        InputValues_V_51_out,
        InputValues_V_51_out_ap_vld,
        InputValues_V_50_out,
        InputValues_V_50_out_ap_vld,
        InputValues_V_49_out,
        InputValues_V_49_out_ap_vld,
        InputValues_V_48_out,
        InputValues_V_48_out_ap_vld,
        InputValues_V_47_out,
        InputValues_V_47_out_ap_vld,
        InputValues_V_46_out,
        InputValues_V_46_out_ap_vld,
        InputValues_V_45_out,
        InputValues_V_45_out_ap_vld,
        InputValues_V_44_out,
        InputValues_V_44_out_ap_vld,
        InputValues_V_43_out,
        InputValues_V_43_out_ap_vld,
        InputValues_V_42_out,
        InputValues_V_42_out_ap_vld,
        InputValues_V_41_out,
        InputValues_V_41_out_ap_vld,
        InputValues_V_40_out,
        InputValues_V_40_out_ap_vld,
        InputValues_V_39_out,
        InputValues_V_39_out_ap_vld,
        InputValues_V_38_out,
        InputValues_V_38_out_ap_vld,
        InputValues_V_37_out,
        InputValues_V_37_out_ap_vld,
        InputValues_V_36_out,
        InputValues_V_36_out_ap_vld,
        InputValues_V_35_out,
        InputValues_V_35_out_ap_vld,
        InputValues_V_34_out,
        InputValues_V_34_out_ap_vld,
        InputValues_V_33_out,
        InputValues_V_33_out_ap_vld,
        InputValues_V_32_out,
        InputValues_V_32_out_ap_vld,
        InputValues_V_31_out,
        InputValues_V_31_out_ap_vld,
        InputValues_V_30_out,
        InputValues_V_30_out_ap_vld,
        InputValues_V_29_out,
        InputValues_V_29_out_ap_vld,
        InputValues_V_28_out,
        InputValues_V_28_out_ap_vld,
        InputValues_V_27_out,
        InputValues_V_27_out_ap_vld,
        InputValues_V_26_out,
        InputValues_V_26_out_ap_vld,
        InputValues_V_25_out,
        InputValues_V_25_out_ap_vld,
        InputValues_V_24_out,
        InputValues_V_24_out_ap_vld,
        InputValues_V_23_out,
        InputValues_V_23_out_ap_vld,
        InputValues_V_22_out,
        InputValues_V_22_out_ap_vld,
        InputValues_V_21_out,
        InputValues_V_21_out_ap_vld,
        InputValues_V_20_out,
        InputValues_V_20_out_ap_vld,
        InputValues_V_19_out,
        InputValues_V_19_out_ap_vld,
        InputValues_V_18_out,
        InputValues_V_18_out_ap_vld,
        InputValues_V_17_out,
        InputValues_V_17_out_ap_vld,
        InputValues_V_16_out,
        InputValues_V_16_out_ap_vld,
        InputValues_V_15_out,
        InputValues_V_15_out_ap_vld,
        InputValues_V_14_out,
        InputValues_V_14_out_ap_vld,
        InputValues_V_13_out,
        InputValues_V_13_out_ap_vld,
        InputValues_V_12_out,
        InputValues_V_12_out_ap_vld,
        InputValues_V_11_out,
        InputValues_V_11_out_ap_vld,
        InputValues_V_10_out,
        InputValues_V_10_out_ap_vld,
        InputValues_V_9_out,
        InputValues_V_9_out_ap_vld,
        InputValues_V_8_out,
        InputValues_V_8_out_ap_vld,
        InputValues_V_7_out,
        InputValues_V_7_out_ap_vld,
        InputValues_V_6_out,
        InputValues_V_6_out_ap_vld,
        InputValues_V_5_out,
        InputValues_V_5_out_ap_vld,
        InputValues_V_4_out,
        InputValues_V_4_out_ap_vld,
        InputValues_V_3_out,
        InputValues_V_3_out_ap_vld,
        InputValues_V_2_out,
        InputValues_V_2_out_ap_vld,
        InputValues_V_1_out,
        InputValues_V_1_out_ap_vld,
        InputValues_V_out,
        InputValues_V_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [61:0] sext_ln31;
output  [31:0] InputValues_V_63_out;
output   InputValues_V_63_out_ap_vld;
output  [31:0] InputValues_V_62_out;
output   InputValues_V_62_out_ap_vld;
output  [31:0] InputValues_V_61_out;
output   InputValues_V_61_out_ap_vld;
output  [31:0] InputValues_V_60_out;
output   InputValues_V_60_out_ap_vld;
output  [31:0] InputValues_V_59_out;
output   InputValues_V_59_out_ap_vld;
output  [31:0] InputValues_V_58_out;
output   InputValues_V_58_out_ap_vld;
output  [31:0] InputValues_V_57_out;
output   InputValues_V_57_out_ap_vld;
output  [31:0] InputValues_V_56_out;
output   InputValues_V_56_out_ap_vld;
output  [31:0] InputValues_V_55_out;
output   InputValues_V_55_out_ap_vld;
output  [31:0] InputValues_V_54_out;
output   InputValues_V_54_out_ap_vld;
output  [31:0] InputValues_V_53_out;
output   InputValues_V_53_out_ap_vld;
output  [31:0] InputValues_V_52_out;
output   InputValues_V_52_out_ap_vld;
output  [31:0] InputValues_V_51_out;
output   InputValues_V_51_out_ap_vld;
output  [31:0] InputValues_V_50_out;
output   InputValues_V_50_out_ap_vld;
output  [31:0] InputValues_V_49_out;
output   InputValues_V_49_out_ap_vld;
output  [31:0] InputValues_V_48_out;
output   InputValues_V_48_out_ap_vld;
output  [31:0] InputValues_V_47_out;
output   InputValues_V_47_out_ap_vld;
output  [31:0] InputValues_V_46_out;
output   InputValues_V_46_out_ap_vld;
output  [31:0] InputValues_V_45_out;
output   InputValues_V_45_out_ap_vld;
output  [31:0] InputValues_V_44_out;
output   InputValues_V_44_out_ap_vld;
output  [31:0] InputValues_V_43_out;
output   InputValues_V_43_out_ap_vld;
output  [31:0] InputValues_V_42_out;
output   InputValues_V_42_out_ap_vld;
output  [31:0] InputValues_V_41_out;
output   InputValues_V_41_out_ap_vld;
output  [31:0] InputValues_V_40_out;
output   InputValues_V_40_out_ap_vld;
output  [31:0] InputValues_V_39_out;
output   InputValues_V_39_out_ap_vld;
output  [31:0] InputValues_V_38_out;
output   InputValues_V_38_out_ap_vld;
output  [31:0] InputValues_V_37_out;
output   InputValues_V_37_out_ap_vld;
output  [31:0] InputValues_V_36_out;
output   InputValues_V_36_out_ap_vld;
output  [31:0] InputValues_V_35_out;
output   InputValues_V_35_out_ap_vld;
output  [31:0] InputValues_V_34_out;
output   InputValues_V_34_out_ap_vld;
output  [31:0] InputValues_V_33_out;
output   InputValues_V_33_out_ap_vld;
output  [31:0] InputValues_V_32_out;
output   InputValues_V_32_out_ap_vld;
output  [31:0] InputValues_V_31_out;
output   InputValues_V_31_out_ap_vld;
output  [31:0] InputValues_V_30_out;
output   InputValues_V_30_out_ap_vld;
output  [31:0] InputValues_V_29_out;
output   InputValues_V_29_out_ap_vld;
output  [31:0] InputValues_V_28_out;
output   InputValues_V_28_out_ap_vld;
output  [31:0] InputValues_V_27_out;
output   InputValues_V_27_out_ap_vld;
output  [31:0] InputValues_V_26_out;
output   InputValues_V_26_out_ap_vld;
output  [31:0] InputValues_V_25_out;
output   InputValues_V_25_out_ap_vld;
output  [31:0] InputValues_V_24_out;
output   InputValues_V_24_out_ap_vld;
output  [31:0] InputValues_V_23_out;
output   InputValues_V_23_out_ap_vld;
output  [31:0] InputValues_V_22_out;
output   InputValues_V_22_out_ap_vld;
output  [31:0] InputValues_V_21_out;
output   InputValues_V_21_out_ap_vld;
output  [31:0] InputValues_V_20_out;
output   InputValues_V_20_out_ap_vld;
output  [31:0] InputValues_V_19_out;
output   InputValues_V_19_out_ap_vld;
output  [31:0] InputValues_V_18_out;
output   InputValues_V_18_out_ap_vld;
output  [31:0] InputValues_V_17_out;
output   InputValues_V_17_out_ap_vld;
output  [31:0] InputValues_V_16_out;
output   InputValues_V_16_out_ap_vld;
output  [31:0] InputValues_V_15_out;
output   InputValues_V_15_out_ap_vld;
output  [31:0] InputValues_V_14_out;
output   InputValues_V_14_out_ap_vld;
output  [31:0] InputValues_V_13_out;
output   InputValues_V_13_out_ap_vld;
output  [31:0] InputValues_V_12_out;
output   InputValues_V_12_out_ap_vld;
output  [31:0] InputValues_V_11_out;
output   InputValues_V_11_out_ap_vld;
output  [31:0] InputValues_V_10_out;
output   InputValues_V_10_out_ap_vld;
output  [31:0] InputValues_V_9_out;
output   InputValues_V_9_out_ap_vld;
output  [31:0] InputValues_V_8_out;
output   InputValues_V_8_out_ap_vld;
output  [31:0] InputValues_V_7_out;
output   InputValues_V_7_out_ap_vld;
output  [31:0] InputValues_V_6_out;
output   InputValues_V_6_out_ap_vld;
output  [31:0] InputValues_V_5_out;
output   InputValues_V_5_out_ap_vld;
output  [31:0] InputValues_V_4_out;
output   InputValues_V_4_out_ap_vld;
output  [31:0] InputValues_V_3_out;
output   InputValues_V_3_out_ap_vld;
output  [31:0] InputValues_V_2_out;
output   InputValues_V_2_out_ap_vld;
output  [31:0] InputValues_V_1_out;
output   InputValues_V_1_out_ap_vld;
output  [31:0] InputValues_V_out;
output   InputValues_V_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_RREADY;
reg InputValues_V_63_out_ap_vld;
reg InputValues_V_62_out_ap_vld;
reg InputValues_V_61_out_ap_vld;
reg InputValues_V_60_out_ap_vld;
reg InputValues_V_59_out_ap_vld;
reg InputValues_V_58_out_ap_vld;
reg InputValues_V_57_out_ap_vld;
reg InputValues_V_56_out_ap_vld;
reg InputValues_V_55_out_ap_vld;
reg InputValues_V_54_out_ap_vld;
reg InputValues_V_53_out_ap_vld;
reg InputValues_V_52_out_ap_vld;
reg InputValues_V_51_out_ap_vld;
reg InputValues_V_50_out_ap_vld;
reg InputValues_V_49_out_ap_vld;
reg InputValues_V_48_out_ap_vld;
reg InputValues_V_47_out_ap_vld;
reg InputValues_V_46_out_ap_vld;
reg InputValues_V_45_out_ap_vld;
reg InputValues_V_44_out_ap_vld;
reg InputValues_V_43_out_ap_vld;
reg InputValues_V_42_out_ap_vld;
reg InputValues_V_41_out_ap_vld;
reg InputValues_V_40_out_ap_vld;
reg InputValues_V_39_out_ap_vld;
reg InputValues_V_38_out_ap_vld;
reg InputValues_V_37_out_ap_vld;
reg InputValues_V_36_out_ap_vld;
reg InputValues_V_35_out_ap_vld;
reg InputValues_V_34_out_ap_vld;
reg InputValues_V_33_out_ap_vld;
reg InputValues_V_32_out_ap_vld;
reg InputValues_V_31_out_ap_vld;
reg InputValues_V_30_out_ap_vld;
reg InputValues_V_29_out_ap_vld;
reg InputValues_V_28_out_ap_vld;
reg InputValues_V_27_out_ap_vld;
reg InputValues_V_26_out_ap_vld;
reg InputValues_V_25_out_ap_vld;
reg InputValues_V_24_out_ap_vld;
reg InputValues_V_23_out_ap_vld;
reg InputValues_V_22_out_ap_vld;
reg InputValues_V_21_out_ap_vld;
reg InputValues_V_20_out_ap_vld;
reg InputValues_V_19_out_ap_vld;
reg InputValues_V_18_out_ap_vld;
reg InputValues_V_17_out_ap_vld;
reg InputValues_V_16_out_ap_vld;
reg InputValues_V_15_out_ap_vld;
reg InputValues_V_14_out_ap_vld;
reg InputValues_V_13_out_ap_vld;
reg InputValues_V_12_out_ap_vld;
reg InputValues_V_11_out_ap_vld;
reg InputValues_V_10_out_ap_vld;
reg InputValues_V_9_out_ap_vld;
reg InputValues_V_8_out_ap_vld;
reg InputValues_V_7_out_ap_vld;
reg InputValues_V_6_out_ap_vld;
reg InputValues_V_5_out_ap_vld;
reg InputValues_V_4_out_ap_vld;
reg InputValues_V_3_out_ap_vld;
reg InputValues_V_2_out_ap_vld;
reg InputValues_V_1_out_ap_vld;
reg InputValues_V_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] exitcond5476_fu_1035_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] empty_65_fu_1047_p1;
reg   [5:0] empty_65_reg_2031;
reg   [7:0] loop_index3_fu_298;
wire   [7:0] empty_64_fu_1041_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_loop_index3_load;
reg   [31:0] InputValues_V_fu_302;
reg   [31:0] InputValues_V_1_fu_306;
reg   [31:0] InputValues_V_2_fu_310;
reg   [31:0] InputValues_V_3_fu_314;
reg   [31:0] InputValues_V_4_fu_318;
reg   [31:0] InputValues_V_5_fu_322;
reg   [31:0] InputValues_V_6_fu_326;
reg   [31:0] InputValues_V_7_fu_330;
reg   [31:0] InputValues_V_8_fu_334;
reg   [31:0] InputValues_V_9_fu_338;
reg   [31:0] InputValues_V_10_fu_342;
reg   [31:0] InputValues_V_11_fu_346;
reg   [31:0] InputValues_V_12_fu_350;
reg   [31:0] InputValues_V_13_fu_354;
reg   [31:0] InputValues_V_14_fu_358;
reg   [31:0] InputValues_V_15_fu_362;
reg   [31:0] InputValues_V_16_fu_366;
reg   [31:0] InputValues_V_17_fu_370;
reg   [31:0] InputValues_V_18_fu_374;
reg   [31:0] InputValues_V_19_fu_378;
reg   [31:0] InputValues_V_20_fu_382;
reg   [31:0] InputValues_V_21_fu_386;
reg   [31:0] InputValues_V_22_fu_390;
reg   [31:0] InputValues_V_23_fu_394;
reg   [31:0] InputValues_V_24_fu_398;
reg   [31:0] InputValues_V_25_fu_402;
reg   [31:0] InputValues_V_26_fu_406;
reg   [31:0] InputValues_V_27_fu_410;
reg   [31:0] InputValues_V_28_fu_414;
reg   [31:0] InputValues_V_29_fu_418;
reg   [31:0] InputValues_V_30_fu_422;
reg   [31:0] InputValues_V_31_fu_426;
reg   [31:0] InputValues_V_32_fu_430;
reg   [31:0] InputValues_V_33_fu_434;
reg   [31:0] InputValues_V_34_fu_438;
reg   [31:0] InputValues_V_35_fu_442;
reg   [31:0] InputValues_V_36_fu_446;
reg   [31:0] InputValues_V_37_fu_450;
reg   [31:0] InputValues_V_38_fu_454;
reg   [31:0] InputValues_V_39_fu_458;
reg   [31:0] InputValues_V_40_fu_462;
reg   [31:0] InputValues_V_41_fu_466;
reg   [31:0] InputValues_V_42_fu_470;
reg   [31:0] InputValues_V_43_fu_474;
reg   [31:0] InputValues_V_44_fu_478;
reg   [31:0] InputValues_V_45_fu_482;
reg   [31:0] InputValues_V_46_fu_486;
reg   [31:0] InputValues_V_47_fu_490;
reg   [31:0] InputValues_V_48_fu_494;
reg   [31:0] InputValues_V_49_fu_498;
reg   [31:0] InputValues_V_50_fu_502;
reg   [31:0] InputValues_V_51_fu_506;
reg   [31:0] InputValues_V_52_fu_510;
reg   [31:0] InputValues_V_53_fu_514;
reg   [31:0] InputValues_V_54_fu_518;
reg   [31:0] InputValues_V_55_fu_522;
reg   [31:0] InputValues_V_56_fu_526;
reg   [31:0] InputValues_V_57_fu_530;
reg   [31:0] InputValues_V_58_fu_534;
reg   [31:0] InputValues_V_59_fu_538;
reg   [31:0] InputValues_V_60_fu_542;
reg   [31:0] InputValues_V_61_fu_546;
reg   [31:0] InputValues_V_62_fu_550;
reg   [31:0] InputValues_V_63_fu_554;
reg    ap_block_pp0_stage0_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Autoencoder_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((exitcond5476_fu_1035_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            loop_index3_fu_298 <= empty_64_fu_1041_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            loop_index3_fu_298 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_10_fu_342 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_11_fu_346 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_12_fu_350 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_13_fu_354 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_14_fu_358 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_15_fu_362 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_16_fu_366 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_17_fu_370 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_18_fu_374 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_19_fu_378 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_1_fu_306 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_20_fu_382 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd21) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_21_fu_386 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd22) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_22_fu_390 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd23) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_23_fu_394 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd24) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_24_fu_398 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd25) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_25_fu_402 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd26) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_26_fu_406 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd27) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_27_fu_410 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd28) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_28_fu_414 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_29_fu_418 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_2_fu_310 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_30_fu_422 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd31) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_31_fu_426 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd32) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_32_fu_430 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd33) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_33_fu_434 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd34) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_34_fu_438 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd35) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_35_fu_442 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd36) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_36_fu_446 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd37) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_37_fu_450 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd38) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_38_fu_454 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd39) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_39_fu_458 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_3_fu_314 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd40) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_40_fu_462 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd41) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_41_fu_466 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd42) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_42_fu_470 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd43) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_43_fu_474 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd44) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_44_fu_478 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd45) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_45_fu_482 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd46) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_46_fu_486 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd47) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_47_fu_490 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd48) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_48_fu_494 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd49) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_49_fu_498 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_4_fu_318 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd50) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_50_fu_502 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd51) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_51_fu_506 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd52) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_52_fu_510 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd53) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_53_fu_514 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd54) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_54_fu_518 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd55) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_55_fu_522 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd56) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_56_fu_526 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd57) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_57_fu_530 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd58) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_58_fu_534 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd59) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_59_fu_538 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_5_fu_322 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd60) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_60_fu_542 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd61) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_61_fu_546 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd62) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_62_fu_550 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd63) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_63_fu_554 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_6_fu_326 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_7_fu_330 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_8_fu_334 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_9_fu_338 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_65_reg_2031 == 6'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_fu_302 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5476_fu_1035_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_65_reg_2031 <= empty_65_fu_1047_p1;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_10_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_11_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_12_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_13_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_14_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_15_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_16_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_17_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_18_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_19_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_1_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_20_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_21_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_22_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_23_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_24_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_25_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_26_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_27_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_28_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_29_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_2_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_30_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_31_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_32_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_32_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_33_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_34_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_34_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_35_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_36_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_36_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_37_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_37_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_38_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_38_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_39_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_39_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_3_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_40_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_40_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_41_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_41_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_42_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_42_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_43_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_43_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_44_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_44_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_45_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_45_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_46_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_46_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_47_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_47_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_48_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_48_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_49_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_49_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_4_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_50_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_50_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_51_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_51_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_52_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_52_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_53_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_53_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_54_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_54_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_55_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_55_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_56_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_56_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_57_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_57_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_58_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_58_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_59_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_59_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_5_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_60_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_60_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_61_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_61_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_62_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_62_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_63_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_63_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_6_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_7_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_8_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_9_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        InputValues_V_out_ap_vld = 1'b1;
    end else begin
        InputValues_V_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond5476_fu_1035_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_loop_index3_load = 8'd0;
    end else begin
        ap_sig_allocacmp_loop_index3_load = loop_index3_fu_298;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign InputValues_V_10_out = InputValues_V_10_fu_342;

assign InputValues_V_11_out = InputValues_V_11_fu_346;

assign InputValues_V_12_out = InputValues_V_12_fu_350;

assign InputValues_V_13_out = InputValues_V_13_fu_354;

assign InputValues_V_14_out = InputValues_V_14_fu_358;

assign InputValues_V_15_out = InputValues_V_15_fu_362;

assign InputValues_V_16_out = InputValues_V_16_fu_366;

assign InputValues_V_17_out = InputValues_V_17_fu_370;

assign InputValues_V_18_out = InputValues_V_18_fu_374;

assign InputValues_V_19_out = InputValues_V_19_fu_378;

assign InputValues_V_1_out = InputValues_V_1_fu_306;

assign InputValues_V_20_out = InputValues_V_20_fu_382;

assign InputValues_V_21_out = InputValues_V_21_fu_386;

assign InputValues_V_22_out = InputValues_V_22_fu_390;

assign InputValues_V_23_out = InputValues_V_23_fu_394;

assign InputValues_V_24_out = InputValues_V_24_fu_398;

assign InputValues_V_25_out = InputValues_V_25_fu_402;

assign InputValues_V_26_out = InputValues_V_26_fu_406;

assign InputValues_V_27_out = InputValues_V_27_fu_410;

assign InputValues_V_28_out = InputValues_V_28_fu_414;

assign InputValues_V_29_out = InputValues_V_29_fu_418;

assign InputValues_V_2_out = InputValues_V_2_fu_310;

assign InputValues_V_30_out = InputValues_V_30_fu_422;

assign InputValues_V_31_out = InputValues_V_31_fu_426;

assign InputValues_V_32_out = InputValues_V_32_fu_430;

assign InputValues_V_33_out = InputValues_V_33_fu_434;

assign InputValues_V_34_out = InputValues_V_34_fu_438;

assign InputValues_V_35_out = InputValues_V_35_fu_442;

assign InputValues_V_36_out = InputValues_V_36_fu_446;

assign InputValues_V_37_out = InputValues_V_37_fu_450;

assign InputValues_V_38_out = InputValues_V_38_fu_454;

assign InputValues_V_39_out = InputValues_V_39_fu_458;

assign InputValues_V_3_out = InputValues_V_3_fu_314;

assign InputValues_V_40_out = InputValues_V_40_fu_462;

assign InputValues_V_41_out = InputValues_V_41_fu_466;

assign InputValues_V_42_out = InputValues_V_42_fu_470;

assign InputValues_V_43_out = InputValues_V_43_fu_474;

assign InputValues_V_44_out = InputValues_V_44_fu_478;

assign InputValues_V_45_out = InputValues_V_45_fu_482;

assign InputValues_V_46_out = InputValues_V_46_fu_486;

assign InputValues_V_47_out = InputValues_V_47_fu_490;

assign InputValues_V_48_out = InputValues_V_48_fu_494;

assign InputValues_V_49_out = InputValues_V_49_fu_498;

assign InputValues_V_4_out = InputValues_V_4_fu_318;

assign InputValues_V_50_out = InputValues_V_50_fu_502;

assign InputValues_V_51_out = InputValues_V_51_fu_506;

assign InputValues_V_52_out = InputValues_V_52_fu_510;

assign InputValues_V_53_out = InputValues_V_53_fu_514;

assign InputValues_V_54_out = InputValues_V_54_fu_518;

assign InputValues_V_55_out = InputValues_V_55_fu_522;

assign InputValues_V_56_out = InputValues_V_56_fu_526;

assign InputValues_V_57_out = InputValues_V_57_fu_530;

assign InputValues_V_58_out = InputValues_V_58_fu_534;

assign InputValues_V_59_out = InputValues_V_59_fu_538;

assign InputValues_V_5_out = InputValues_V_5_fu_322;

assign InputValues_V_60_out = InputValues_V_60_fu_542;

assign InputValues_V_61_out = InputValues_V_61_fu_546;

assign InputValues_V_62_out = InputValues_V_62_fu_550;

assign InputValues_V_63_out = InputValues_V_63_fu_554;

assign InputValues_V_6_out = InputValues_V_6_fu_326;

assign InputValues_V_7_out = InputValues_V_7_fu_330;

assign InputValues_V_8_out = InputValues_V_8_fu_334;

assign InputValues_V_9_out = InputValues_V_9_fu_338;

assign InputValues_V_out = InputValues_V_fu_302;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_64_fu_1041_p2 = (ap_sig_allocacmp_loop_index3_load + 8'd1);

assign empty_65_fu_1047_p1 = ap_sig_allocacmp_loop_index3_load[5:0];

assign exitcond5476_fu_1035_p2 = ((ap_sig_allocacmp_loop_index3_load == 8'd128) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 32'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

endmodule //Autoencoder_Autoencoder_Pipeline_1
