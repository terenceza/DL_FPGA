// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Autoencoder_sigmoid (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        d,
        ap_return
);

parameter    ap_ST_fsm_state1 = 94'd1;
parameter    ap_ST_fsm_state2 = 94'd2;
parameter    ap_ST_fsm_state3 = 94'd4;
parameter    ap_ST_fsm_state4 = 94'd8;
parameter    ap_ST_fsm_state5 = 94'd16;
parameter    ap_ST_fsm_state6 = 94'd32;
parameter    ap_ST_fsm_state7 = 94'd64;
parameter    ap_ST_fsm_state8 = 94'd128;
parameter    ap_ST_fsm_state9 = 94'd256;
parameter    ap_ST_fsm_state10 = 94'd512;
parameter    ap_ST_fsm_state11 = 94'd1024;
parameter    ap_ST_fsm_state12 = 94'd2048;
parameter    ap_ST_fsm_state13 = 94'd4096;
parameter    ap_ST_fsm_state14 = 94'd8192;
parameter    ap_ST_fsm_state15 = 94'd16384;
parameter    ap_ST_fsm_state16 = 94'd32768;
parameter    ap_ST_fsm_state17 = 94'd65536;
parameter    ap_ST_fsm_state18 = 94'd131072;
parameter    ap_ST_fsm_state19 = 94'd262144;
parameter    ap_ST_fsm_state20 = 94'd524288;
parameter    ap_ST_fsm_state21 = 94'd1048576;
parameter    ap_ST_fsm_state22 = 94'd2097152;
parameter    ap_ST_fsm_state23 = 94'd4194304;
parameter    ap_ST_fsm_state24 = 94'd8388608;
parameter    ap_ST_fsm_state25 = 94'd16777216;
parameter    ap_ST_fsm_state26 = 94'd33554432;
parameter    ap_ST_fsm_state27 = 94'd67108864;
parameter    ap_ST_fsm_state28 = 94'd134217728;
parameter    ap_ST_fsm_state29 = 94'd268435456;
parameter    ap_ST_fsm_state30 = 94'd536870912;
parameter    ap_ST_fsm_state31 = 94'd1073741824;
parameter    ap_ST_fsm_state32 = 94'd2147483648;
parameter    ap_ST_fsm_state33 = 94'd4294967296;
parameter    ap_ST_fsm_state34 = 94'd8589934592;
parameter    ap_ST_fsm_state35 = 94'd17179869184;
parameter    ap_ST_fsm_state36 = 94'd34359738368;
parameter    ap_ST_fsm_state37 = 94'd68719476736;
parameter    ap_ST_fsm_state38 = 94'd137438953472;
parameter    ap_ST_fsm_state39 = 94'd274877906944;
parameter    ap_ST_fsm_state40 = 94'd549755813888;
parameter    ap_ST_fsm_state41 = 94'd1099511627776;
parameter    ap_ST_fsm_state42 = 94'd2199023255552;
parameter    ap_ST_fsm_state43 = 94'd4398046511104;
parameter    ap_ST_fsm_state44 = 94'd8796093022208;
parameter    ap_ST_fsm_state45 = 94'd17592186044416;
parameter    ap_ST_fsm_state46 = 94'd35184372088832;
parameter    ap_ST_fsm_state47 = 94'd70368744177664;
parameter    ap_ST_fsm_state48 = 94'd140737488355328;
parameter    ap_ST_fsm_state49 = 94'd281474976710656;
parameter    ap_ST_fsm_state50 = 94'd562949953421312;
parameter    ap_ST_fsm_state51 = 94'd1125899906842624;
parameter    ap_ST_fsm_state52 = 94'd2251799813685248;
parameter    ap_ST_fsm_state53 = 94'd4503599627370496;
parameter    ap_ST_fsm_state54 = 94'd9007199254740992;
parameter    ap_ST_fsm_state55 = 94'd18014398509481984;
parameter    ap_ST_fsm_state56 = 94'd36028797018963968;
parameter    ap_ST_fsm_state57 = 94'd72057594037927936;
parameter    ap_ST_fsm_state58 = 94'd144115188075855872;
parameter    ap_ST_fsm_state59 = 94'd288230376151711744;
parameter    ap_ST_fsm_state60 = 94'd576460752303423488;
parameter    ap_ST_fsm_state61 = 94'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 94'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 94'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 94'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 94'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 94'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 94'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 94'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 94'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 94'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 94'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 94'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 94'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 94'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 94'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 94'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 94'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 94'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 94'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 94'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 94'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 94'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 94'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 94'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 94'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 94'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 94'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 94'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 94'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 94'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 94'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 94'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 94'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 94'd9903520314283042199192993792;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] d;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [93:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln1086_fu_141_p2;
reg   [0:0] icmp_ln1086_reg_775;
wire   [0:0] p_Result_11_fu_147_p2;
reg   [0:0] p_Result_11_reg_780;
wire   [31:0] tmp_V_fu_153_p3;
reg   [31:0] tmp_V_reg_785;
wire   [32:0] zext_ln1088_fu_161_p1;
reg   [32:0] zext_ln1088_reg_790;
wire   [31:0] sub_ln1094_fu_199_p2;
reg   [31:0] sub_ln1094_reg_796;
wire   [5:0] trunc_ln1098_fu_205_p1;
reg   [5:0] trunc_ln1098_reg_804;
wire   [1:0] or_ln_fu_295_p3;
reg   [1:0] or_ln_reg_809;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1109_fu_303_p2;
reg   [0:0] icmp_ln1109_reg_814;
wire   [31:0] add_ln1109_fu_309_p2;
reg   [31:0] add_ln1109_reg_819;
wire   [31:0] sub_ln1110_fu_314_p2;
reg   [31:0] sub_ln1110_reg_824;
wire   [63:0] p_Result_13_fu_402_p5;
reg   [63:0] p_Result_13_reg_829;
wire    ap_CS_fsm_state3;
wire   [63:0] select_ln1086_fu_417_p3;
reg   [63:0] select_ln1086_reg_834;
wire    ap_CS_fsm_state4;
wire   [63:0] grp_fu_130_p2;
reg   [63:0] tmp_s_reg_839;
wire    ap_CS_fsm_state25;
wire   [63:0] grp_fu_120_p2;
reg   [63:0] add_reg_844;
wire    ap_CS_fsm_state32;
wire   [63:0] grp_fu_125_p2;
reg   [63:0] LD_1_reg_849;
wire    ap_CS_fsm_state91;
wire   [63:0] ireg_fu_424_p1;
reg   [63:0] ireg_reg_854;
wire    ap_CS_fsm_state92;
reg   [0:0] p_Result_14_reg_859;
wire   [53:0] zext_ln604_fu_465_p1;
reg   [53:0] zext_ln604_reg_866;
wire   [53:0] man_V_2_fu_469_p2;
reg   [53:0] man_V_2_reg_871;
wire   [0:0] icmp_ln606_fu_475_p2;
reg   [0:0] icmp_ln606_reg_876;
wire   [11:0] F2_fu_481_p2;
reg   [11:0] F2_reg_884;
wire   [0:0] icmp_ln617_fu_487_p2;
reg   [0:0] icmp_ln617_reg_893;
wire   [0:0] icmp_ln629_fu_503_p2;
reg   [0:0] icmp_ln629_reg_899;
wire   [5:0] trunc_ln630_fu_509_p1;
reg   [5:0] trunc_ln630_reg_904;
wire   [0:0] icmp_ln630_fu_519_p2;
reg   [0:0] icmp_ln630_reg_909;
wire   [53:0] man_V_fu_525_p3;
reg   [53:0] man_V_reg_914;
wire    ap_CS_fsm_state93;
wire   [0:0] icmp_ln616_fu_530_p2;
reg   [0:0] icmp_ln616_reg_919;
wire  signed [11:0] sh_amt_fu_540_p3;
reg  signed [11:0] sh_amt_reg_924;
wire   [31:0] trunc_ln618_fu_547_p1;
reg   [31:0] trunc_ln618_reg_929;
wire   [0:0] icmp_ln620_fu_551_p2;
reg   [0:0] icmp_ln620_reg_935;
wire   [0:0] icmp_ln638_fu_567_p2;
reg   [0:0] icmp_ln638_reg_940;
wire   [0:0] and_ln414_fu_646_p2;
reg   [0:0] and_ln414_reg_945;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state5;
wire   [31:0] r_V_fu_135_p2;
reg   [32:0] p_Result_s_fu_165_p4;
wire   [33:0] p_Result_12_fu_175_p3;
wire  signed [63:0] sext_ln1250_fu_183_p1;
reg   [63:0] tmp_fu_187_p3;
wire   [31:0] l_fu_195_p1;
wire   [31:0] lsb_index_fu_209_p2;
wire   [30:0] tmp_1_fu_214_p4;
wire   [5:0] sub_ln1098_fu_230_p2;
wire   [32:0] zext_ln1098_fu_235_p1;
wire   [32:0] lshr_ln1098_fu_239_p2;
wire   [32:0] p_Result_3_fu_245_p2;
wire   [0:0] icmp_ln1097_fu_224_p2;
wire   [0:0] icmp_ln1098_fu_250_p2;
wire   [0:0] tmp_2_fu_262_p3;
wire   [0:0] p_Result_4_fu_276_p3;
wire   [0:0] xor_ln1100_fu_270_p2;
wire   [0:0] and_ln1100_fu_283_p2;
wire   [0:0] a_fu_256_p2;
wire   [0:0] or_ln1100_fu_289_p2;
wire   [63:0] zext_ln1108_fu_319_p1;
wire   [63:0] zext_ln1109_fu_322_p1;
wire   [63:0] zext_ln1110_fu_331_p1;
wire   [63:0] lshr_ln1109_fu_325_p2;
wire   [63:0] shl_ln1110_fu_334_p2;
wire   [63:0] m_2_fu_340_p3;
wire   [63:0] zext_ln1112_fu_347_p1;
wire   [63:0] m_3_fu_350_p2;
wire   [62:0] m_fu_356_p4;
wire   [0:0] p_Result_5_fu_370_p3;
wire   [10:0] select_ln1116_fu_378_p3;
wire   [10:0] trunc_ln1116_fu_386_p1;
wire   [10:0] add_ln1122_fu_389_p2;
wire   [63:0] zext_ln1113_fu_366_p1;
wire   [11:0] tmp_3_fu_395_p3;
wire   [63:0] bitcast_ln800_fu_414_p1;
wire   [10:0] exp_tmp_fu_439_p4;
wire   [51:0] trunc_ln600_fu_453_p1;
wire   [52:0] p_Result_15_fu_457_p3;
wire   [62:0] trunc_ln590_fu_427_p1;
wire   [11:0] zext_ln501_fu_449_p1;
wire   [10:0] tmp_8_fu_493_p4;
wire   [11:0] add_ln630_fu_513_p2;
wire   [11:0] sub_ln616_fu_535_p2;
wire   [6:0] tmp_6_fu_557_p4;
wire   [11:0] add_ln626_fu_578_p2;
wire  signed [31:0] sext_ln626_fu_583_p1;
wire   [0:0] icmp_ln626_fu_573_p2;
wire   [0:0] p_Result_9_fu_587_p3;
wire   [5:0] sub_ln630_fu_602_p2;
wire   [5:0] select_ln630_fu_607_p3;
wire   [53:0] zext_ln630_fu_614_p1;
wire   [53:0] lshr_ln630_fu_618_p2;
wire   [53:0] p_Result_10_fu_624_p2;
wire   [0:0] icmp_ln630_1_fu_630_p2;
wire   [0:0] r_fu_636_p2;
wire   [0:0] or_ln414_fu_641_p2;
wire   [0:0] qb_fu_595_p3;
wire    ap_CS_fsm_state94;
wire  signed [31:0] sext_ln616_fu_652_p1;
wire   [53:0] zext_ln621_fu_660_p1;
wire   [53:0] ashr_ln621_fu_664_p2;
wire   [0:0] tmp_7_fu_673_p3;
wire   [31:0] trunc_ln621_fu_669_p1;
wire   [31:0] select_ln623_fu_680_p3;
wire   [31:0] select_ln620_fu_688_p3;
wire   [31:0] zext_ln423_fu_695_p1;
wire   [0:0] xor_ln606_fu_704_p2;
wire   [0:0] or_ln617_fu_714_p2;
wire   [0:0] xor_ln617_fu_718_p2;
wire   [31:0] add_ln423_fu_698_p2;
wire   [0:0] and_ln616_fu_724_p2;
wire   [0:0] and_ln617_fu_709_p2;
wire   [31:0] shl_ln639_fu_655_p2;
wire   [0:0] or_ln606_fu_736_p2;
wire   [31:0] select_ln606_fu_729_p3;
wire   [31:0] select_ln606_1_fu_741_p3;
wire   [0:0] or_ln606_1_fu_748_p2;
wire   [0:0] or_ln606_2_fu_761_p2;
wire   [31:0] select_ln606_2_fu_753_p3;
reg   [93:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 94'd1;
end

Autoencoder_dadd_64ns_64ns_64_7_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_7_full_dsp_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_s_reg_839),
    .din1(64'd4607182418800017408),
    .ce(1'b1),
    .dout(grp_fu_120_p2)
);

Autoencoder_ddiv_64ns_64ns_64_59_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 59 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
ddiv_64ns_64ns_64_59_no_dsp_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(add_reg_844),
    .ce(1'b1),
    .dout(grp_fu_125_p2)
);

Autoencoder_dexp_64ns_64ns_64_21_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dexp_64ns_64ns_64_21_full_dsp_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(select_ln1086_reg_834),
    .ce(1'b1),
    .dout(grp_fu_130_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        F2_reg_884 <= F2_fu_481_p2;
        icmp_ln606_reg_876 <= icmp_ln606_fu_475_p2;
        icmp_ln617_reg_893 <= icmp_ln617_fu_487_p2;
        icmp_ln629_reg_899 <= icmp_ln629_fu_503_p2;
        icmp_ln630_reg_909 <= icmp_ln630_fu_519_p2;
        ireg_reg_854 <= ireg_fu_424_p1;
        man_V_2_reg_871 <= man_V_2_fu_469_p2;
        p_Result_14_reg_859 <= ireg_fu_424_p1[32'd63];
        trunc_ln630_reg_904 <= trunc_ln630_fu_509_p1;
        zext_ln604_reg_866[51 : 0] <= zext_ln604_fu_465_p1[51 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        LD_1_reg_849 <= grp_fu_125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1086_reg_775 == 1'd0))) begin
        add_ln1109_reg_819 <= add_ln1109_fu_309_p2;
        icmp_ln1109_reg_814 <= icmp_ln1109_fu_303_p2;
        or_ln_reg_809[0] <= or_ln_fu_295_p3[0];
        sub_ln1110_reg_824 <= sub_ln1110_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_reg_844 <= grp_fu_120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state93) & (icmp_ln606_reg_876 == 1'd0))) begin
        and_ln414_reg_945 <= and_ln414_fu_646_p2;
        icmp_ln620_reg_935 <= icmp_ln620_fu_551_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln1086_reg_775 <= icmp_ln1086_fu_141_p2;
        p_Result_11_reg_780 <= p_Result_11_fu_147_p2;
        sub_ln1094_reg_796 <= sub_ln1094_fu_199_p2;
        tmp_V_reg_785 <= tmp_V_fu_153_p3;
        trunc_ln1098_reg_804 <= trunc_ln1098_fu_205_p1;
        zext_ln1088_reg_790[31 : 0] <= zext_ln1088_fu_161_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        icmp_ln616_reg_919 <= icmp_ln616_fu_530_p2;
        icmp_ln638_reg_940 <= icmp_ln638_fu_567_p2;
        man_V_reg_914 <= man_V_fu_525_p3;
        sh_amt_reg_924 <= sh_amt_fu_540_p3;
        trunc_ln618_reg_929 <= trunc_ln618_fu_547_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1086_reg_775 == 1'd0))) begin
        p_Result_13_reg_829 <= p_Result_13_fu_402_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln1086_reg_834 <= select_ln1086_fu_417_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp_s_reg_839 <= grp_fu_130_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_481_p2 = (12'd1075 - zext_ln501_fu_449_p1);

assign a_fu_256_p2 = (icmp_ln1098_fu_250_p2 & icmp_ln1097_fu_224_p2);

assign add_ln1109_fu_309_p2 = ($signed(sub_ln1094_reg_796) + $signed(32'd4294967242));

assign add_ln1122_fu_389_p2 = (select_ln1116_fu_378_p3 + trunc_ln1116_fu_386_p1);

assign add_ln423_fu_698_p2 = (select_ln620_fu_688_p3 + zext_ln423_fu_695_p1);

assign add_ln626_fu_578_p2 = ($signed(F2_reg_884) + $signed(12'd4095));

assign add_ln630_fu_513_p2 = ($signed(F2_fu_481_p2) + $signed(12'd4094));

assign and_ln1100_fu_283_p2 = (xor_ln1100_fu_270_p2 & p_Result_4_fu_276_p3);

assign and_ln414_fu_646_p2 = (qb_fu_595_p3 & or_ln414_fu_641_p2);

assign and_ln616_fu_724_p2 = (xor_ln617_fu_718_p2 & icmp_ln616_reg_919);

assign and_ln617_fu_709_p2 = (xor_ln606_fu_704_p2 & icmp_ln617_reg_893);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_return = ((or_ln606_2_fu_761_p2[0:0] == 1'b1) ? select_ln606_2_fu_753_p3 : 32'd0);

assign ashr_ln621_fu_664_p2 = $signed(man_V_reg_914) >>> zext_ln621_fu_660_p1;

assign bitcast_ln800_fu_414_p1 = p_Result_13_reg_829;

assign exp_tmp_fu_439_p4 = {{ireg_fu_424_p1[62:52]}};

assign icmp_ln1086_fu_141_p2 = ((d == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1097_fu_224_p2 = (($signed(tmp_1_fu_214_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1098_fu_250_p2 = ((p_Result_3_fu_245_p2 != 33'd0) ? 1'b1 : 1'b0);

assign icmp_ln1109_fu_303_p2 = (($signed(lsb_index_fu_209_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln606_fu_475_p2 = ((trunc_ln590_fu_427_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_530_p2 = (($signed(F2_reg_884) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_487_p2 = ((exp_tmp_fu_439_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_551_p2 = ((sh_amt_fu_540_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln626_fu_573_p2 = (($signed(F2_reg_884) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign icmp_ln629_fu_503_p2 = (($signed(tmp_8_fu_493_p4) > $signed(11'd0)) ? 1'b1 : 1'b0);

assign icmp_ln630_1_fu_630_p2 = ((p_Result_10_fu_624_p2 != 54'd0) ? 1'b1 : 1'b0);

assign icmp_ln630_fu_519_p2 = (($signed(add_ln630_fu_513_p2) > $signed(12'd53)) ? 1'b1 : 1'b0);

assign icmp_ln638_fu_567_p2 = ((tmp_6_fu_557_p4 == 7'd0) ? 1'b1 : 1'b0);

assign ireg_fu_424_p1 = LD_1_reg_849;

assign l_fu_195_p1 = tmp_fu_187_p3[31:0];

assign lsb_index_fu_209_p2 = ($signed(sub_ln1094_reg_796) + $signed(32'd4294967243));

assign lshr_ln1098_fu_239_p2 = 33'd8589934591 >> zext_ln1098_fu_235_p1;

assign lshr_ln1109_fu_325_p2 = zext_ln1108_fu_319_p1 >> zext_ln1109_fu_322_p1;

assign lshr_ln630_fu_618_p2 = 54'd18014398509481983 >> zext_ln630_fu_614_p1;

assign m_2_fu_340_p3 = ((icmp_ln1109_reg_814[0:0] == 1'b1) ? lshr_ln1109_fu_325_p2 : shl_ln1110_fu_334_p2);

assign m_3_fu_350_p2 = (m_2_fu_340_p3 + zext_ln1112_fu_347_p1);

assign m_fu_356_p4 = {{m_3_fu_350_p2[63:1]}};

assign man_V_2_fu_469_p2 = (54'd0 - zext_ln604_fu_465_p1);

assign man_V_fu_525_p3 = ((p_Result_14_reg_859[0:0] == 1'b1) ? man_V_2_reg_871 : zext_ln604_reg_866);

assign or_ln1100_fu_289_p2 = (and_ln1100_fu_283_p2 | a_fu_256_p2);

assign or_ln414_fu_641_p2 = (r_fu_636_p2 | p_Result_14_reg_859);

assign or_ln606_1_fu_748_p2 = (icmp_ln638_reg_940 | and_ln617_fu_709_p2);

assign or_ln606_2_fu_761_p2 = (or_ln606_fu_736_p2 | or_ln606_1_fu_748_p2);

assign or_ln606_fu_736_p2 = (icmp_ln606_reg_876 | and_ln616_fu_724_p2);

assign or_ln617_fu_714_p2 = (icmp_ln617_reg_893 | icmp_ln606_reg_876);

assign or_ln_fu_295_p3 = {{1'd0}, {or_ln1100_fu_289_p2}};

assign p_Result_10_fu_624_p2 = (man_V_fu_525_p3 & lshr_ln630_fu_618_p2);

assign p_Result_11_fu_147_p2 = (($signed(d) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign p_Result_12_fu_175_p3 = {{1'd1}, {p_Result_s_fu_165_p4}};

assign p_Result_13_fu_402_p5 = {{tmp_3_fu_395_p3}, {zext_ln1113_fu_366_p1[51:0]}};

assign p_Result_15_fu_457_p3 = {{1'd1}, {trunc_ln600_fu_453_p1}};

assign p_Result_3_fu_245_p2 = (zext_ln1088_reg_790 & lshr_ln1098_fu_239_p2);

assign p_Result_4_fu_276_p3 = zext_ln1088_reg_790[lsb_index_fu_209_p2];

assign p_Result_5_fu_370_p3 = m_3_fu_350_p2[32'd54];

assign p_Result_9_fu_587_p3 = man_V_fu_525_p3[sext_ln626_fu_583_p1];

integer ap_tvar_int_0;

always @ (zext_ln1088_fu_161_p1) begin
    for (ap_tvar_int_0 = 33 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 32 - 0) begin
            p_Result_s_fu_165_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_165_p4[ap_tvar_int_0] = zext_ln1088_fu_161_p1[32 - ap_tvar_int_0];
        end
    end
end

assign qb_fu_595_p3 = ((icmp_ln626_fu_573_p2[0:0] == 1'b1) ? p_Result_14_reg_859 : p_Result_9_fu_587_p3);

assign r_V_fu_135_p2 = (32'd0 - d);

assign r_fu_636_p2 = (icmp_ln630_1_fu_630_p2 & icmp_ln629_reg_899);

assign select_ln1086_fu_417_p3 = ((icmp_ln1086_reg_775[0:0] == 1'b1) ? 64'd0 : bitcast_ln800_fu_414_p1);

assign select_ln1116_fu_378_p3 = ((p_Result_5_fu_370_p3[0:0] == 1'b1) ? 11'd1023 : 11'd1022);

assign select_ln606_1_fu_741_p3 = ((and_ln617_fu_709_p2[0:0] == 1'b1) ? trunc_ln618_reg_929 : shl_ln639_fu_655_p2);

assign select_ln606_2_fu_753_p3 = ((or_ln606_fu_736_p2[0:0] == 1'b1) ? select_ln606_fu_729_p3 : select_ln606_1_fu_741_p3);

assign select_ln606_fu_729_p3 = ((icmp_ln606_reg_876[0:0] == 1'b1) ? 32'd0 : add_ln423_fu_698_p2);

assign select_ln620_fu_688_p3 = ((icmp_ln620_reg_935[0:0] == 1'b1) ? trunc_ln621_fu_669_p1 : select_ln623_fu_680_p3);

assign select_ln623_fu_680_p3 = ((tmp_7_fu_673_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln630_fu_607_p3 = ((icmp_ln630_reg_909[0:0] == 1'b1) ? 6'd0 : sub_ln630_fu_602_p2);

assign sext_ln1250_fu_183_p1 = $signed(p_Result_12_fu_175_p3);

assign sext_ln616_fu_652_p1 = sh_amt_reg_924;

assign sext_ln626_fu_583_p1 = $signed(add_ln626_fu_578_p2);

assign sh_amt_fu_540_p3 = ((icmp_ln616_fu_530_p2[0:0] == 1'b1) ? F2_reg_884 : sub_ln616_fu_535_p2);

assign shl_ln1110_fu_334_p2 = zext_ln1108_fu_319_p1 << zext_ln1110_fu_331_p1;

assign shl_ln639_fu_655_p2 = trunc_ln618_reg_929 << sext_ln616_fu_652_p1;

assign sub_ln1094_fu_199_p2 = (32'd33 - l_fu_195_p1);

assign sub_ln1098_fu_230_p2 = (6'd23 - trunc_ln1098_reg_804);

assign sub_ln1110_fu_314_p2 = (32'd54 - sub_ln1094_reg_796);

assign sub_ln616_fu_535_p2 = (12'd0 - F2_reg_884);

assign sub_ln630_fu_602_p2 = ($signed(6'd55) - $signed(trunc_ln630_reg_904));

assign tmp_1_fu_214_p4 = {{lsb_index_fu_209_p2[31:1]}};

assign tmp_2_fu_262_p3 = lsb_index_fu_209_p2[32'd31];

assign tmp_3_fu_395_p3 = {{p_Result_11_reg_780}, {add_ln1122_fu_389_p2}};

assign tmp_6_fu_557_p4 = {{sh_amt_fu_540_p3[11:5]}};

assign tmp_7_fu_673_p3 = ireg_reg_854[32'd63];

assign tmp_8_fu_493_p4 = {{F2_fu_481_p2[11:1]}};

assign tmp_V_fu_153_p3 = ((p_Result_11_fu_147_p2[0:0] == 1'b1) ? d : r_V_fu_135_p2);


always @ (sext_ln1250_fu_183_p1) begin
    if (sext_ln1250_fu_183_p1[0] == 1'b1) begin
        tmp_fu_187_p3 = 64'd0;
    end else if (sext_ln1250_fu_183_p1[1] == 1'b1) begin
        tmp_fu_187_p3 = 64'd1;
    end else if (sext_ln1250_fu_183_p1[2] == 1'b1) begin
        tmp_fu_187_p3 = 64'd2;
    end else if (sext_ln1250_fu_183_p1[3] == 1'b1) begin
        tmp_fu_187_p3 = 64'd3;
    end else if (sext_ln1250_fu_183_p1[4] == 1'b1) begin
        tmp_fu_187_p3 = 64'd4;
    end else if (sext_ln1250_fu_183_p1[5] == 1'b1) begin
        tmp_fu_187_p3 = 64'd5;
    end else if (sext_ln1250_fu_183_p1[6] == 1'b1) begin
        tmp_fu_187_p3 = 64'd6;
    end else if (sext_ln1250_fu_183_p1[7] == 1'b1) begin
        tmp_fu_187_p3 = 64'd7;
    end else if (sext_ln1250_fu_183_p1[8] == 1'b1) begin
        tmp_fu_187_p3 = 64'd8;
    end else if (sext_ln1250_fu_183_p1[9] == 1'b1) begin
        tmp_fu_187_p3 = 64'd9;
    end else if (sext_ln1250_fu_183_p1[10] == 1'b1) begin
        tmp_fu_187_p3 = 64'd10;
    end else if (sext_ln1250_fu_183_p1[11] == 1'b1) begin
        tmp_fu_187_p3 = 64'd11;
    end else if (sext_ln1250_fu_183_p1[12] == 1'b1) begin
        tmp_fu_187_p3 = 64'd12;
    end else if (sext_ln1250_fu_183_p1[13] == 1'b1) begin
        tmp_fu_187_p3 = 64'd13;
    end else if (sext_ln1250_fu_183_p1[14] == 1'b1) begin
        tmp_fu_187_p3 = 64'd14;
    end else if (sext_ln1250_fu_183_p1[15] == 1'b1) begin
        tmp_fu_187_p3 = 64'd15;
    end else if (sext_ln1250_fu_183_p1[16] == 1'b1) begin
        tmp_fu_187_p3 = 64'd16;
    end else if (sext_ln1250_fu_183_p1[17] == 1'b1) begin
        tmp_fu_187_p3 = 64'd17;
    end else if (sext_ln1250_fu_183_p1[18] == 1'b1) begin
        tmp_fu_187_p3 = 64'd18;
    end else if (sext_ln1250_fu_183_p1[19] == 1'b1) begin
        tmp_fu_187_p3 = 64'd19;
    end else if (sext_ln1250_fu_183_p1[20] == 1'b1) begin
        tmp_fu_187_p3 = 64'd20;
    end else if (sext_ln1250_fu_183_p1[21] == 1'b1) begin
        tmp_fu_187_p3 = 64'd21;
    end else if (sext_ln1250_fu_183_p1[22] == 1'b1) begin
        tmp_fu_187_p3 = 64'd22;
    end else if (sext_ln1250_fu_183_p1[23] == 1'b1) begin
        tmp_fu_187_p3 = 64'd23;
    end else if (sext_ln1250_fu_183_p1[24] == 1'b1) begin
        tmp_fu_187_p3 = 64'd24;
    end else if (sext_ln1250_fu_183_p1[25] == 1'b1) begin
        tmp_fu_187_p3 = 64'd25;
    end else if (sext_ln1250_fu_183_p1[26] == 1'b1) begin
        tmp_fu_187_p3 = 64'd26;
    end else if (sext_ln1250_fu_183_p1[27] == 1'b1) begin
        tmp_fu_187_p3 = 64'd27;
    end else if (sext_ln1250_fu_183_p1[28] == 1'b1) begin
        tmp_fu_187_p3 = 64'd28;
    end else if (sext_ln1250_fu_183_p1[29] == 1'b1) begin
        tmp_fu_187_p3 = 64'd29;
    end else if (sext_ln1250_fu_183_p1[30] == 1'b1) begin
        tmp_fu_187_p3 = 64'd30;
    end else if (sext_ln1250_fu_183_p1[31] == 1'b1) begin
        tmp_fu_187_p3 = 64'd31;
    end else if (sext_ln1250_fu_183_p1[32] == 1'b1) begin
        tmp_fu_187_p3 = 64'd32;
    end else if (sext_ln1250_fu_183_p1[33] == 1'b1) begin
        tmp_fu_187_p3 = 64'd33;
    end else if (sext_ln1250_fu_183_p1[34] == 1'b1) begin
        tmp_fu_187_p3 = 64'd34;
    end else if (sext_ln1250_fu_183_p1[35] == 1'b1) begin
        tmp_fu_187_p3 = 64'd35;
    end else if (sext_ln1250_fu_183_p1[36] == 1'b1) begin
        tmp_fu_187_p3 = 64'd36;
    end else if (sext_ln1250_fu_183_p1[37] == 1'b1) begin
        tmp_fu_187_p3 = 64'd37;
    end else if (sext_ln1250_fu_183_p1[38] == 1'b1) begin
        tmp_fu_187_p3 = 64'd38;
    end else if (sext_ln1250_fu_183_p1[39] == 1'b1) begin
        tmp_fu_187_p3 = 64'd39;
    end else if (sext_ln1250_fu_183_p1[40] == 1'b1) begin
        tmp_fu_187_p3 = 64'd40;
    end else if (sext_ln1250_fu_183_p1[41] == 1'b1) begin
        tmp_fu_187_p3 = 64'd41;
    end else if (sext_ln1250_fu_183_p1[42] == 1'b1) begin
        tmp_fu_187_p3 = 64'd42;
    end else if (sext_ln1250_fu_183_p1[43] == 1'b1) begin
        tmp_fu_187_p3 = 64'd43;
    end else if (sext_ln1250_fu_183_p1[44] == 1'b1) begin
        tmp_fu_187_p3 = 64'd44;
    end else if (sext_ln1250_fu_183_p1[45] == 1'b1) begin
        tmp_fu_187_p3 = 64'd45;
    end else if (sext_ln1250_fu_183_p1[46] == 1'b1) begin
        tmp_fu_187_p3 = 64'd46;
    end else if (sext_ln1250_fu_183_p1[47] == 1'b1) begin
        tmp_fu_187_p3 = 64'd47;
    end else if (sext_ln1250_fu_183_p1[48] == 1'b1) begin
        tmp_fu_187_p3 = 64'd48;
    end else if (sext_ln1250_fu_183_p1[49] == 1'b1) begin
        tmp_fu_187_p3 = 64'd49;
    end else if (sext_ln1250_fu_183_p1[50] == 1'b1) begin
        tmp_fu_187_p3 = 64'd50;
    end else if (sext_ln1250_fu_183_p1[51] == 1'b1) begin
        tmp_fu_187_p3 = 64'd51;
    end else if (sext_ln1250_fu_183_p1[52] == 1'b1) begin
        tmp_fu_187_p3 = 64'd52;
    end else if (sext_ln1250_fu_183_p1[53] == 1'b1) begin
        tmp_fu_187_p3 = 64'd53;
    end else if (sext_ln1250_fu_183_p1[54] == 1'b1) begin
        tmp_fu_187_p3 = 64'd54;
    end else if (sext_ln1250_fu_183_p1[55] == 1'b1) begin
        tmp_fu_187_p3 = 64'd55;
    end else if (sext_ln1250_fu_183_p1[56] == 1'b1) begin
        tmp_fu_187_p3 = 64'd56;
    end else if (sext_ln1250_fu_183_p1[57] == 1'b1) begin
        tmp_fu_187_p3 = 64'd57;
    end else if (sext_ln1250_fu_183_p1[58] == 1'b1) begin
        tmp_fu_187_p3 = 64'd58;
    end else if (sext_ln1250_fu_183_p1[59] == 1'b1) begin
        tmp_fu_187_p3 = 64'd59;
    end else if (sext_ln1250_fu_183_p1[60] == 1'b1) begin
        tmp_fu_187_p3 = 64'd60;
    end else if (sext_ln1250_fu_183_p1[61] == 1'b1) begin
        tmp_fu_187_p3 = 64'd61;
    end else if (sext_ln1250_fu_183_p1[62] == 1'b1) begin
        tmp_fu_187_p3 = 64'd62;
    end else if (sext_ln1250_fu_183_p1[63] == 1'b1) begin
        tmp_fu_187_p3 = 64'd63;
    end else begin
        tmp_fu_187_p3 = 64'd64;
    end
end

assign trunc_ln1098_fu_205_p1 = sub_ln1094_fu_199_p2[5:0];

assign trunc_ln1116_fu_386_p1 = sub_ln1094_reg_796[10:0];

assign trunc_ln590_fu_427_p1 = ireg_fu_424_p1[62:0];

assign trunc_ln600_fu_453_p1 = ireg_fu_424_p1[51:0];

assign trunc_ln618_fu_547_p1 = man_V_fu_525_p3[31:0];

assign trunc_ln621_fu_669_p1 = ashr_ln621_fu_664_p2[31:0];

assign trunc_ln630_fu_509_p1 = F2_fu_481_p2[5:0];

assign xor_ln1100_fu_270_p2 = (tmp_2_fu_262_p3 ^ 1'd1);

assign xor_ln606_fu_704_p2 = (icmp_ln606_reg_876 ^ 1'd1);

assign xor_ln617_fu_718_p2 = (or_ln617_fu_714_p2 ^ 1'd1);

assign zext_ln1088_fu_161_p1 = tmp_V_fu_153_p3;

assign zext_ln1098_fu_235_p1 = sub_ln1098_fu_230_p2;

assign zext_ln1108_fu_319_p1 = tmp_V_reg_785;

assign zext_ln1109_fu_322_p1 = add_ln1109_reg_819;

assign zext_ln1110_fu_331_p1 = sub_ln1110_reg_824;

assign zext_ln1112_fu_347_p1 = or_ln_reg_809;

assign zext_ln1113_fu_366_p1 = m_fu_356_p4;

assign zext_ln423_fu_695_p1 = and_ln414_reg_945;

assign zext_ln501_fu_449_p1 = exp_tmp_fu_439_p4;

assign zext_ln604_fu_465_p1 = p_Result_15_fu_457_p3;

assign zext_ln621_fu_660_p1 = $unsigned(sext_ln616_fu_652_p1);

assign zext_ln630_fu_614_p1 = select_ln630_fu_607_p3;

always @ (posedge ap_clk) begin
    zext_ln1088_reg_790[32] <= 1'b0;
    or_ln_reg_809[1] <= 1'b0;
    zext_ln604_reg_866[53:52] <= 2'b01;
end

endmodule //Autoencoder_sigmoid
